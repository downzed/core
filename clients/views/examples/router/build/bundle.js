webpackJsonp([0],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(1);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** multi app\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///multi_app?");

/***/ },

/***/ 1:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(2);\nvar ReactDom = __webpack_require__(159);\nvar core = __webpack_require__(160);\nvar Baobab = __webpack_require__(161);\n__webpack_require__(211);\n\ncore.loadContext(__webpack_require__(352));\n\nvar element = document.getElementById('app');\ncore.require(['core.App', 'shell.Shell'], function (App, Shell) {\n  ReactDom.render(React.createElement(\n    App,\n    null,\n    React.createElement(Shell, null)\n  ), element);\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./App.jsx\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./App.jsx?");

/***/ },

/***/ 213:
/***/ function(module, exports, __webpack_require__) {

	eval("var map = {\n\t\"./divide/Horizontal.module.jsx\": 214,\n\t\"./divide/HorizontalDrop.module.jsx\": 215,\n\t\"./divide/HorizontalLine.module.jsx\": 216,\n\t\"./divide/Vertical.module.jsx\": 217,\n\t\"./divide/VerticalDrop.module.jsx\": 218,\n\t\"./divide/VerticalLine.module.jsx\": 219,\n\t\"./dnd/Drag.module.jsx\": 220,\n\t\"./dnd/Drop.module.jsx\": 221,\n\t\"./dnd/DropPad.module.jsx\": 222,\n\t\"./screen/Screen.module.jsx\": 223,\n\t\"./shell/Btn.module.jsx\": 224,\n\t\"./shell/Config.module.jsx\": 225,\n\t\"./shell/Open.module.jsx\": 226,\n\t\"./shell/Shell.module.jsx\": 227,\n\t\"./shell/debug/Debug.module.jsx\": 231,\n\t\"./shell/modules/Modules.module.jsx\": 233,\n\t\"./shell/readme/ReadMe.module.jsx\": 234\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 213;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/ido/Documents/core/clients/exports/dev .*\\.module\\.js\n ** module id = 213\n ** module chunks = 0\n **/\n//# sourceURL=webpack:////Users/ido/Documents/core/clients/exports/dev_.*\\.module\\.js?");

/***/ },

/***/ 237:
/***/ function(module, exports, __webpack_require__) {

	eval("var map = {\n\t\"./Koko.module.jsx\": 238,\n\t\"./koko.module.js\": 251\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 237;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/ido/Documents/core/clients/exports/koko .*\\.module\\.js\n ** module id = 237\n ** module chunks = 0\n **/\n//# sourceURL=webpack:////Users/ido/Documents/core/clients/exports/koko_.*\\.module\\.js?");

/***/ },

/***/ 252:
/***/ function(module, exports, __webpack_require__) {

	eval("var map = {\n\t\"./Form.module.jsx\": 253,\n\t\"./Input.module.jsx\": 255,\n\t\"./SmartSelect/SmartSelect.module.jsx\": 256,\n\t\"./Submit.module.jsx\": 269,\n\t\"./forms.module.js\": 270,\n\t\"./mixins/form.mixin.module.jsx\": 271,\n\t\"./mixins/input.mixin.module.jsx\": 272\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 252;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/ido/Documents/core/clients/exports/forms .*\\.module\\.js\n ** module id = 252\n ** module chunks = 0\n **/\n//# sourceURL=webpack:////Users/ido/Documents/core/clients/exports/forms_.*\\.module\\.js?");

/***/ },

/***/ 273:
/***/ function(module, exports) {

	eval("function webpackContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackContext.keys = function() { return []; };\nwebpackContext.resolve = webpackContext;\nmodule.exports = webpackContext;\nwebpackContext.id = 273;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/ido/Documents/core/clients/exports/layout .*\\.module\\.js\n ** module id = 273\n ** module chunks = 0\n **/\n//# sourceURL=webpack:////Users/ido/Documents/core/clients/exports/layout_.*\\.module\\.js?");

/***/ },

/***/ 274:
/***/ function(module, exports, __webpack_require__) {

	eval("var map = {\n\t\"./Loader/ui.Loader.module.jsx\": 275,\n\t\"./colorPicker/ui.Color.module.jsx\": 278,\n\t\"./refresh/ui.Refresh.module.jsx\": 280,\n\t\"./scroll/ui.Scroll.module.jsx\": 283,\n\t\"./ui.Button.module.jsx\": 300,\n\t\"./ui.CheckBox.module.jsx\": 347,\n\t\"./ui.CloseBtn.module.jsx\": 348,\n\t\"./ui.Header.module.jsx\": 349,\n\t\"./ui.Icon.module.jsx\": 350,\n\t\"./ui.module.js\": 351\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 274;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/ido/Documents/core/clients/exports/ui .*\\.module\\.js\n ** module id = 274\n ** module chunks = 0\n **/\n//# sourceURL=webpack:////Users/ido/Documents/core/clients/exports/ui_.*\\.module\\.js?");

/***/ },

/***/ 352:
/***/ function(module, exports, __webpack_require__) {

	eval("var map = {\n\t\"./FileEditor.module.jsx\": 353,\n\t\"./Parts.module.jsx\": 363,\n\t\"./Run.module.jsx\": 364\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 352;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./parts .*\\.module\\.js\n ** module id = 352\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./parts_.*\\.module\\.js?");

/***/ },

/***/ 353:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _brace = __webpack_require__(354);\n\nvar _brace2 = _interopRequireDefault(_brace);\n\nvar _reactAce = __webpack_require__(357);\n\nvar _reactAce2 = _interopRequireDefault(_reactAce);\n\n__webpack_require__(358);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n  } else {\n    obj[key] = value;\n  }return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar React = __webpack_require__(2);\nvar PropTypes = React.PropTypes;\nvar core = __webpack_require__(160);\n\n__webpack_require__(359);\n\ncore.Component('FileEditor.FileSystemItem', {\n  contextTypes: {\n    shell: React.PropTypes.object\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isOpen: false,\n      children: []\n    };\n  },\n  renderChild: function renderChild(child, i) {\n    return this.createElement(core.components.FileSystemItem, { key: i, item: child, path: [].concat(_toConsumableArray(this.props.path), [child.name]) });\n  },\n  toggle: function toggle(e) {\n    e.stopPropagation();\n    if (!this.state.isOpen) {\n      core.connection.action('fs.readdir', { path: this.props.path }, this.setChildren);\n    }\n    this.setState({ isOpen: !this.state.isOpen });\n  },\n  setChildren: function setChildren(children) {\n    this.setState({\n      children: children\n    });\n  },\n  openFile: function openFile() {\n    this.emit('openFile', this.props.item, this.props.path);\n  },\n\n  render: function render() {\n    var style = _defineProperty({ paddingLeft: 16, cursor: 'pointer', position: 'relative' }, 'paddingLeft', 20);\n    if (this.props.item.type === 'file') {\n      return this.createElement('div', { style: style, onClick: this.openFile }, this.props.item.name);\n    }\n    return this.createElement('div', { style: style, onClick: this.toggle }, this.createElement('span', { style: { position: 'absolute', top: 2, left: 2, fontSize: '12px' } }, this.state.isOpen ? '▼' : '►'), this.props.item.name, this.state.isOpen ? this.state.children.map(this.renderChild) : null);\n  }\n});\n\ncore.Component('FileEditor.FileSystem', ['FileEditor.FileSystemItem'], function (FileSystemItem) {\n  return {\n    getInitialState: function getInitialState() {\n      return {\n        items: []\n      };\n    },\n    renderItem: function renderItem(item, i) {\n      return this.createElement(FileSystemItem, { key: i, item: item, path: [item.name] });\n    },\n\n    render: function render() {\n      // console.log('render');\n      return this.createElement('div', { style: { userSelect: 'none' } }, this.props.items.map(this.renderItem));\n    }\n  };\n});\n\ncore.Component('FileEditor', ['divide.Vertical', 'FileEditor.FileSystem'], function (Editor, Vertical, FileSystem) {\n  return {\n    events: {\n      'openFile': 'openFile'\n    },\n    getInitialState: function getInitialState() {\n      core.connection.action('fs.readdir', { path: [] }, this.setItems);\n      return {\n        mode: 'javascript',\n        items: [],\n        file: ''\n      };\n    },\n    setItems: function setItems(data) {\n      var folders = [],\n          files = [];\n      data.map(function (item) {\n        if (item.type === 'file') files.push(item);else folders.push(item);\n      });\n      this.setState({\n        items: folders.concat(files)\n      });\n    },\n\n    contextTypes: {\n      shell: React.PropTypes.object\n    },\n    openFile: function openFile(item, path) {\n      window.a = this.refs.editor;\n      // return console.dir(item, path);\n      core.connection.action('fs.readfile', { path: path }, this.setFile);\n    },\n    setFile: function setFile(file) {\n      this.setState({\n        file: file\n      });\n    },\n    readDir: function readDir(dir) {},\n    onCodeChange: function onCodeChange(v) {\n      console.log(v);\n    },\n\n    render: function render() {\n      // console.log('render');\n      return this.createElement(Vertical, null, this.createElement(FileSystem, { items: this.state.items }), this.createElement(_reactAce2.default, {\n        mode: this.state.mode,\n        theme: 'terminal',\n        onChange: this.onCodeChange,\n        name: 'UNIQUE_ID_OF_DIV',\n        width: '100%',\n        height: '100%',\n        ref: 'editor',\n        value: this.state.file,\n        editorProps: { $blockScrolling: true }\n      }));\n    }\n  };\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./parts/FileEditor.module.jsx\n ** module id = 353\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./parts/FileEditor.module.jsx?");

/***/ },

/***/ 363:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar React = __webpack_require__(2);\nvar ReactDom = __webpack_require__(159);\nvar core = __webpack_require__(160);\n\nvar styles = {\n  part: {\n    border: '1px solid #ddd'\n  }\n};\n\nfunction except(source) {\n  var result = {};\n\n  for (var _len = arguments.length, properties = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    properties[_key - 1] = arguments[_key];\n  }\n\n  for (var m in source) {\n    if (properties.indexOf(m) === -1) result[m] = source[m];\n  }\n  return result;\n}\n\ncore.Style('box', {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0\n});\n\ncore.Style('red', {\n  background: 'red'\n});\n\ncore.Style('border', {\n  border: '1px solid #ddd',\n  borderRadius: 4\n});\ncore.Style('pad-40', {\n  padding: 40\n});\ncore.Style('scroll', {\n  overflow: 'auto'\n});\n\ncore.Directive('if', [], function () {\n  return function (value, props, element) {\n    if (typeof value === 'string') {\n      if (!element.owner.state[value]) return null;\n    } else if (!value) return null;\n    return props;\n  };\n});\n\ncore.Directive('styles', [], function () {\n  return function (value, props, element) {\n    var style = _extends({}, props.style);\n    value.split(' ').map(function (name) {\n      var coreStyle = core.styles[name];\n      if (!coreStyle) return console.error('core styles directive cannot find style ' + name);\n      for (var rule in coreStyle) {\n        style[rule] = coreStyle[rule];\n      }\n    });\n    var newProps = except(props, 'style', 'styles');\n    newProps.style = style;\n    return newProps;\n  };\n});\n\ncore.Directive('repeat', [], function () {\n  return function (value, props, element) {\n    if (typeof value === 'string') {\n      var owner = element.owner;\n      var result = [];\n      var target = owner.state[value];\n      var cleanProps = except(props, 'repeat');\n      console.debug(\"element.children\", element.children);\n      if (Array.isArray(target)) {\n        result = target.map(function (item, i) {\n          return owner.createElement.apply(owner, [element.type, _extends({}, cleanProps, { key: i })].concat(_toConsumableArray(element.children)));\n        });\n        return result;\n      }\n    }\n    return props;\n  };\n});\n\nmodule.exports = core.Component('Parts', ['ui', 'ui.Button', 'divide.Horizontal', 'divide.Vertical', 'Run'], function (ui, Button, Horizontal, Vertical, Run) {\n\n  return {\n    contextTypes: {\n      app: React.PropTypes.object\n    },\n    componentDidMount: function componentDidMount() {\n      var _this = this;\n\n      this.context.app.connection.action('app.config', {}, function (config) {\n        _this.context.app.set('core.app.config', config);\n      });\n    },\n    getInitialState: function getInitialState() {\n      return {\n        isOpen: false,\n        items: [1, 2, 3]\n      };\n    },\n    renderPart: function renderPart(name, part) {\n      return this.createElement('div', { key: name }, this.createElement('div', null, name), this.createElement('div', null, part.description), this.createElement('div', { style: styles.part }, React.createElement(part.component, part.props || {})));\n    },\n    render: function render() {\n      var _this2 = this;\n\n      var children = [];\n      // for(var m in parts){\n      //   children.push(this.renderPart(m, parts[m]))\n      // }\n      return this.createElement('div', { styles: 'box pad-40 scroll' }, this.createElement('button', { onClick: function onClick() {\n          _this2.setState({ isOpen: !_this2.state.isOpen });\n        } }, 'toggle'), this.createElement('div', { 'if': 'isOpen',\n        styles: 'red border',\n        style: { background: 'green' } }, ' wowaa '), this.createElement('div', { repeat: 'item in items' }, this.createElement('div', null, 'ok [[ item ]]')), this.createElement(Run, { style: { top: 160, border: '1px solid #ddd' } }));\n    }\n  };\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./parts/Parts.module.jsx\n ** module id = 363\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./parts/Parts.module.jsx?");

/***/ },

/***/ 364:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar React = __webpack_require__(2);\nvar PropTypes = React.PropTypes;\nvar core = __webpack_require__(160);\n\nvar crockford = __webpack_require__(365);\n\nfunction isOperator(c) {\n  return (/[+\\-*\\/\\^%=(),]/.test(c)\n  );\n}\nfunction isDigit(c) {\n  return (/[0-9\\.]/.test(c)\n  );\n}\nfunction isWhiteSpace(c) {\n  return (/\\s/.test(c)\n  );\n}\nfunction isString(c) {\n  return (/[\"']/.test(c)\n  );\n}\nfunction isIdentifier(c) {\n  return (/[A-z$_.]/.test(c)\n  );\n}\n\nvar operators = {\n  \"+\": function _(a, b) {\n    return a + b;\n  },\n  \"-\": function _(a, b) {\n    if (typeof b === \"undefined\") return -a;\n    return a - b;\n  },\n  \"*\": function _(a, b) {\n    return a * b;\n  },\n  \"/\": function _(a, b) {\n    return a / b;\n  },\n  \"%\": function _(a, b) {\n    return a % b;\n  },\n  \"^\": function _(a, b) {\n    return Math.pow(a, b);\n  }\n};\n\nvar variables = {\n  pi: Math.PI,\n  e: Math.E\n};\n\nvar functions = {\n  sin: Math.sin,\n  cos: Math.cos,\n  tan: Math.cos,\n  asin: Math.asin,\n  acos: Math.acos,\n  atan: Math.atan,\n  abs: Math.abs,\n  round: Math.round,\n  ceil: Math.ceil,\n  floor: Math.floor,\n  log: Math.log,\n  exp: Math.exp,\n  sqrt: Math.sqrt,\n  max: Math.max,\n  min: Math.min,\n  random: Math.random\n};\n\nvar args = {};\n\nfunction Lexer() {};\n\n/*\n*   produce an array of token objects from a string.\n*   a token object has a 'type' property which is one of 'identifier', 'string', 'number', or 'operator'\n*/\n\nLexer.prototype = {\n  maxChars: 1000,\n  lex: function lex(input) {\n    this.input = input;\n    this.tokens = [];\n    this.index = 0;\n    this.char = '';\n\n    var start, num, str;\n\n    var count = 0;\n\n    while (this.index < input.length) {\n      count++;\n      // console.log(this.char);\n      if (count > 1000) return this.tokens;\n      this.char = this.input[this.index];\n      if (isString(this.char)) this.addStringToken();else if (isWhiteSpace(this.char)) this.advance();else if (isOperator(this.char)) {\n        this.addToken('operator', this.char);\n        this.advance();\n      } else if (isDigit(this.char)) this.addNumberToken();else this.addIdentifierToken();\n    }\n    this.addToken(\"(end)\");\n    return this.tokens;\n  },\n  advance: function advance() {\n    // move to the next char and return it.\n    this.index += 1;\n    this.char = this.input[this.index];\n    return this.char;\n  },\n  addToken: function addToken(type, value) {\n    this.tokens.push({\n      type: type,\n      value: value\n    });\n  },\n  addStringToken: function addStringToken() {\n    // console.log('s');\n    var start = this.char;\n    var string = '';\n    var count = 0;\n    while (count < 10000 && this.advance() !== start) {\n      count++;\n      string += this.char;\n    }\n    this.addToken('string', string);\n    this.advance();\n  },\n  addNumberToken: function addNumberToken() {\n    // console.log('n');\n    var number = this.char;\n    while (isDigit(this.advance())) {\n      number += this.char;\n    }\n    number = number.indexOf('.') > -1 ? parseFloat(number) : parseInt(number);\n    this.addToken('number', number);\n  },\n  addIdentifierToken: function addIdentifierToken() {\n    // console.log('i');\n    var identifier = this.char;\n    var count = 0;\n    var char = this.advance();\n    while (isIdentifier(char) && count < 10) {\n      count++;\n      char = this.advance();\n      identifier = identifier + this.char;\n    }\n    this.addToken(\"identifier\", identifier);\n  }\n};\n\nfunction Parser() {\n  var _this = this;\n\n  this.tokens = [];\n  this.symbols = {};\n  this.index = 0;\n\n  this.prefix(\"-\", 7);\n  this.infix(\"^\", 6, 5);\n  this.infix(\"*\", 4);\n  this.infix(\"/\", 4);\n  this.infix(\"%\", 4);\n  this.infix(\"+\", 3);\n  this.infix(\"-\", 3);\n  this.infix(\"=\", 1, 2, function (left) {\n    if (left.type === \"identifier\") {\n      return {\n        type: \"assign\",\n        name: left.value,\n        value: _this.expression(2)\n      };\n    } else if (left.type === \"call\") {\n      console.dir(left);\n      return {\n        type: \"call\",\n        name: left.value,\n        args: left.args,\n        value: _this.expression(2)\n      };\n    } else {\n      // throw \"Invalid value\";\n      console.dir(left.type);\n    }\n  });\n\n  this.symbol(\",\");\n  this.symbol(\")\");\n  this.symbol(\"(end)\");\n\n  this.symbol(\"(\", function () {\n    var value = _this.expression(2);\n    if (_this.token().value !== \")\") throw \"Expected closing parenthesis ')'\";\n    _this.advance();\n    return value;\n  });\n  this.symbol(\"number\", function (number) {\n    return number;\n  });\n\n  this.symbol(\"identifier\", function (name) {\n    if (_this.token().value === \"(\") {\n      // function call\n      var args = [];\n      if (_this.tokens[_this.index + 1].value === \")\") _this.advance();else {\n        do {\n          _this.advance();\n          args.push(_this.expression(2));\n        } while (_this.token().value === \",\");\n        if (_this.token().value !== \")\") throw \"Expected closing parenthesis ')'\";\n      }\n      _this.advance();\n      return {\n        type: \"call\",\n        args: args,\n        name: name.value\n      };\n    }\n    return name;\n  });\n}\n\nParser.prototype = {\n  symbol: function symbol(id, nud, lbp, led) {\n    var sym = this.symbols[id] || {};\n    this.symbols[id] = {\n      lbp: sym.lbp || lbp, // left binding power\n      nud: sym.nud || nud, // null denotative function\n      led: sym.led || led // left denotative function\n    };\n  },\n  token: function token() {\n    var token = this.tokens[this.index];\n    var symbol = Object.create(this.symbols[token.type] || this.symbols[token.value]);\n    symbol.type = token.type;\n    symbol.value = token.value;\n    return symbol;\n  },\n  advance: function advance() {\n    this.index += 1;\n    return this.token();\n  },\n  parse: function parse(tokens) {\n    this.tokens = tokens;\n    this.index = 0;\n    this.parseTree = [];\n    while (this.token().type !== \"(end)\") {\n      this.parseTree.push(this.expression(0));\n    }\n    console.debug('parseTree:', this.parseTree);\n    return this.parseTree;\n  },\n  expression: function expression(rbp) {\n    var left,\n        token = this.token();\n    this.advance();\n    if (!token.nud) throw \"Unexpected token: \" + token.value;\n    left = token.nud(token);\n    while (rbp < this.token().lbp) {\n      token = this.token();\n      this.advance();\n      if (!token.led) throw \"Unexpected token: \" + token.value;\n      left = token.led(left);\n    }\n    return left;\n  },\n  infix: function infix(id, lbp, rbp, led) {\n    rbp = rbp || lbp;\n    var parser = this;\n    this.symbol(id, null, lbp, led || function (left) {\n      return {\n        type: id,\n        left: left,\n        right: parser.expression(rbp)\n      };\n    });\n  },\n  prefix: function prefix(id, rbp) {\n    var parser = this;\n    this.symbol(id, function () {\n      return {\n        type: id,\n        right: parser.expression(rbp)\n      };\n    });\n  }\n};\n\nfunction Evaluator() {\n  this.args = {};\n  this.scope = {};\n}\n\nEvaluator.prototype = {\n  parseNode: function (_parseNode) {\n    function parseNode(_x) {\n      return _parseNode.apply(this, arguments);\n    }\n\n    parseNode.toString = function () {\n      return _parseNode.toString();\n    };\n\n    return parseNode;\n  }(function (node) {\n    if (node.type === \"number\") return node.value;else if (operators[node.type]) {\n      if (node.left) return operators[node.type](this.parseNode(node.left), this.parseNode(node.right));\n      return operators[node.type](this.parseNode(node.right));\n    } else if (node.type === \"identifier\") {\n      var value = this.args.hasOwnProperty(node.value) ? args[node.value] : variables[node.value];\n      if (typeof value === \"undefined\") throw node.value + \" is undefined\";\n      return value;\n    } else if (node.type === \"assign\") {\n      console.log(node.name);\n      variables[node.name] = this.parseNode(node.value);\n    } else if (node.type === \"call\") {\n      for (var i = 0; i < node.args.length; i++) {\n        node.args[i] = this.parseNode(node.args[i]);\n      }if (this.scope[node.name]) {\n        if (typeof this.scope[node.name] === 'function') {\n          return this.scope[node.name].apply(this.scope, node.args);\n        } else throw new Error(node.name + ' is not a function');\n      }\n      if (functions[node.name]) return functions[node.name].apply(null, node.args);\n      throw new Error(node.name + ' is not a function');\n    } else if (node.type === \"function\") {\n      functions[node.name] = function () {\n        for (var i = 0; i < node.args.length; i++) {\n          args[node.args[i].value] = arguments[i];\n        }\n        var ret = parseNode(node.value);\n        this.args = {};\n        return ret;\n      };\n    }\n  }),\n  evaluate: function evaluate(parseTree, scope) {\n    this.args = {};\n    this.scope = scope || {};\n    var output = \"\";\n    for (var i = 0; i < parseTree.length; i++) {\n      var value = this.parseNode(parseTree[i]);\n      if (typeof value !== \"undefined\") output += value;\n    }\n    return output;\n  }\n};\n\nvar lexer = window.lexer = new Lexer();\nvar parser = window.parser = new Parser();\nvar evaluator = window.evaluator = new Evaluator();\n\nvar run = window.run = function (input, scope) {\n  try {\n    // var tokens = lexer.lex(input);\n    // var parseTree = parser.parse(tokens);\n    // var output = evaluator.evaluate(parseTree, scope);\n    // return output;\n    console.log(crockford()(input));\n  } catch (e) {\n    return e;\n  }\n};\n\ncore.Component('Run', [], function () {\n  return {\n    getInitialState: function getInitialState() {\n      return {\n        history: [],\n        input: '',\n        output: ''\n      };\n    },\n\n    contextTypes: {\n      shell: React.PropTypes.object\n    },\n    readDir: function readDir(dir) {\n      core.connection.action('fs.readdir', { path: [] }, function (data) {\n        console.dir(data);\n      });\n    },\n    onKeyUp: function onKeyUp(e) {\n      if (e.keyCode === 13) {\n        var input = this.state.input;\n        return run(input);\n        if (!input) return;\n        var history = this.state.history;\n        var scroll = this.refs.scroll;\n        history.push({ type: 'input', value: input });\n        var output = run(input);\n        history.push({ type: 'output', value: output });\n        this.setState({\n          input: '',\n          output: output,\n          history: history\n        });\n        scroll.scrollTop = scroll.scrollHeight;\n      }\n    },\n    onChange: function onChange(e) {\n      var input = e.target.value;\n      this.setState({\n        input: input\n      });\n    },\n    renderHistoryItem: function renderHistoryItem(item, i) {\n      if (item.type === 'input') {\n        return this.createElement('div', { key: i, style: { color: '#444' } }, this.createElement('span', { style: { color: '#ddd' } }, ' '), '  ', item.value.toString());\n      }\n      return this.createElement('div', { key: i, style: { color: '#888' } }, this.createElement('span', { style: { color: '#aaa' } }, '>'), ' ', item.value.toString());\n    },\n\n    render: function render() {\n      var _this2 = this;\n\n      // console.log('render');\n      window.run = this;\n      return this.createElement('div', { style: _extends({ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0 }, this.props.style), onClick: function onClick() {\n          _this2.refs.input.focus();\n        } }, this.createElement('div', { ref: 'scroll', style: { position: 'absolute', top: 0, bottom: 30, left: 0, right: 0, overflow: 'auto' } }, this.state.history.map(this.renderHistoryItem), this.createElement('input', { ref: 'input', value: this.state.input, onChange: this.onChange, onKeyUp: this.onKeyUp, style: { width: '100%', border: 0, outline: 'none' } })), this.createElement('div', { style: { position: 'absolute', bottom: 0, height: 30, left: 0, right: 0 } }));\n    }\n  };\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./parts/Run.module.jsx\n ** module id = 364\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./parts/Run.module.jsx?");

/***/ },

/***/ 365:
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n// parse.js\n// Parser for Simplified JavaScript written in Simplified JavaScript\n// From Top Down Operator Precedence\n// http://javascript.crockford.com/tdop/index.html\n// Douglas Crockford\n// 2010-06-26\n\n__webpack_require__(366);\n\nmodule.exports = function () {\n    var scope;\n    var symbol_table = {};\n    var token;\n    var tokens;\n    var token_nr;\n\n    var itself = function itself() {\n        return this;\n    };\n\n    var original_scope = {\n        define: function define(n) {\n            var t = this.def[n.value];\n            if ((typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) === \"object\") {\n                n.error(t.reserved ? \"Already reserved.\" : \"Already defined.\");\n            }\n            this.def[n.value] = n;\n            n.reserved = false;\n            n.nud = itself;\n            n.led = null;\n            n.std = null;\n            n.lbp = 0;\n            n.scope = scope;\n            return n;\n        },\n        find: function find(n) {\n            var e = this,\n                o;\n            while (true) {\n                o = e.def[n];\n                if (o && typeof o !== 'function') {\n                    return e.def[n];\n                }\n                e = e.parent;\n                if (!e) {\n                    o = symbol_table[n];\n                    return o && typeof o !== 'function' ? o : symbol_table[\"(name)\"];\n                }\n            }\n        },\n        pop: function pop() {\n            scope = this.parent;\n        },\n        reserve: function reserve(n) {\n            if (n.arity !== \"name\" || n.reserved) {\n                return;\n            }\n            var t = this.def[n.value];\n            if (t) {\n                if (t.reserved) {\n                    return;\n                }\n                if (t.arity === \"name\") {\n                    n.error(\"Already defined.\");\n                }\n            }\n            this.def[n.value] = n;\n            n.reserved = true;\n        }\n    };\n\n    var new_scope = function new_scope() {\n        var s = scope;\n        scope = Object.create(original_scope);\n        scope.def = {};\n        scope.parent = s;\n        return scope;\n    };\n\n    var advance = function advance(id) {\n        var a, o, t, v;\n        if (id && token.id !== id) {\n            token.error(\"Expected '\" + id + \"'.\");\n        }\n        if (token_nr >= tokens.length) {\n            token = symbol_table[\"(end)\"];\n            return;\n        }\n        t = tokens[token_nr];\n        token_nr += 1;\n        v = t.value;\n        a = t.type;\n        if (a === \"name\") {\n            o = scope.find(v);\n        } else if (a === \"operator\") {\n            o = symbol_table[v];\n            if (!o) {\n                t.error(\"Unknown operator.\");\n            }\n        } else if (a === \"string\" || a === \"number\") {\n            o = symbol_table[\"(literal)\"];\n            a = \"literal\";\n        } else {\n            t.error(\"Unexpected token.\");\n        }\n        token = Object.create(o);\n        token.from = t.from;\n        token.to = t.to;\n        token.value = v;\n        token.arity = a;\n        return token;\n    };\n\n    var expression = function expression(rbp) {\n        var left;\n        var t = token;\n        advance();\n        left = t.nud();\n        while (rbp < token.lbp) {\n            t = token;\n            advance();\n            left = t.led(left);\n        }\n        return left;\n    };\n\n    var statement = function statement() {\n        var n = token,\n            v;\n\n        if (n.std) {\n            advance();\n            scope.reserve(n);\n            return n.std();\n        }\n        v = expression(0);\n        if (!v.assignment && v.id !== \"(\") {\n            v.error(\"Bad expression statement.\");\n        }\n        advance(\";\");\n        return v;\n    };\n\n    var statements = function statements() {\n        var a = [],\n            s;\n        while (true) {\n            if (token.id === \"}\" || token.id === \"(end)\") {\n                break;\n            }\n            s = statement();\n            if (s) {\n                a.push(s);\n            }\n        }\n        return a.length === 0 ? null : a.length === 1 ? a[0] : a;\n    };\n\n    var block = function block() {\n        var t = token;\n        advance(\"{\");\n        return t.std();\n    };\n\n    var original_symbol = {\n        nud: function nud() {\n            this.error(\"Undefined.\");\n        },\n        led: function led(left) {\n            this.error(\"Missing operator.\");\n        }\n    };\n\n    var symbol = function symbol(id, bp) {\n        var s = symbol_table[id];\n        bp = bp || 0;\n        if (s) {\n            if (bp >= s.lbp) {\n                s.lbp = bp;\n            }\n        } else {\n            s = Object.create(original_symbol);\n            s.id = s.value = id;\n            s.lbp = bp;\n            symbol_table[id] = s;\n        }\n        return s;\n    };\n\n    var constant = function constant(s, v) {\n        var x = symbol(s);\n        x.nud = function () {\n            scope.reserve(this);\n            this.value = symbol_table[this.id].value;\n            this.arity = \"literal\";\n            return this;\n        };\n        x.value = v;\n        return x;\n    };\n\n    var infix = function infix(id, bp, led) {\n        var s = symbol(id, bp);\n        s.led = led || function (left) {\n            this.first = left;\n            this.second = expression(bp);\n            this.arity = \"binary\";\n            return this;\n        };\n        return s;\n    };\n\n    var infixr = function infixr(id, bp, led) {\n        var s = symbol(id, bp);\n        s.led = led || function (left) {\n            this.first = left;\n            this.second = expression(bp - 1);\n            this.arity = \"binary\";\n            return this;\n        };\n        return s;\n    };\n\n    var assignment = function assignment(id) {\n        return infixr(id, 10, function (left) {\n            if (left.id !== \".\" && left.id !== \"[\" && left.arity !== \"name\") {\n                left.error(\"Bad lvalue.\");\n            }\n            this.first = left;\n            this.second = expression(9);\n            this.assignment = true;\n            this.arity = \"binary\";\n            return this;\n        });\n    };\n\n    var prefix = function prefix(id, nud) {\n        var s = symbol(id);\n        s.nud = nud || function () {\n            scope.reserve(this);\n            this.first = expression(70);\n            this.arity = \"unary\";\n            return this;\n        };\n        return s;\n    };\n\n    var stmt = function stmt(s, f) {\n        var x = symbol(s);\n        x.std = f;\n        return x;\n    };\n\n    symbol(\"(end)\");\n    symbol(\"(name)\");\n    symbol(\":\");\n    symbol(\";\");\n    symbol(\")\");\n    symbol(\"]\");\n    symbol(\"}\");\n    symbol(\",\");\n    symbol(\"else\");\n\n    constant(\"true\", true);\n    constant(\"false\", false);\n    constant(\"null\", null);\n    constant(\"pi\", 3.141592653589793);\n    constant(\"Object\", {});\n    constant(\"Array\", []);\n\n    symbol(\"(literal)\").nud = itself;\n\n    symbol(\"this\").nud = function () {\n        scope.reserve(this);\n        this.arity = \"this\";\n        return this;\n    };\n\n    assignment(\"=\");\n    assignment(\"+=\");\n    assignment(\"-=\");\n\n    infix(\"?\", 20, function (left) {\n        this.first = left;\n        this.second = expression(0);\n        advance(\":\");\n        this.third = expression(0);\n        this.arity = \"ternary\";\n        return this;\n    });\n\n    infixr(\"&&\", 30);\n    infixr(\"||\", 30);\n\n    infixr(\"===\", 40);\n    infixr(\"!==\", 40);\n    infixr(\"<\", 40);\n    infixr(\"<=\", 40);\n    infixr(\">\", 40);\n    infixr(\">=\", 40);\n\n    infix(\"+\", 50);\n    infix(\"-\", 50);\n\n    infix(\"*\", 60);\n    infix(\"/\", 60);\n\n    infix(\".\", 80, function (left) {\n        this.first = left;\n        if (token.arity !== \"name\") {\n            token.error(\"Expected a property name.\");\n        }\n        token.arity = \"literal\";\n        this.second = token;\n        this.arity = \"binary\";\n        advance();\n        return this;\n    });\n\n    infix(\"[\", 80, function (left) {\n        this.first = left;\n        this.second = expression(0);\n        this.arity = \"binary\";\n        advance(\"]\");\n        return this;\n    });\n\n    infix(\"(\", 80, function (left) {\n        var a = [];\n        if (left.id === \".\" || left.id === \"[\") {\n            this.arity = \"ternary\";\n            this.first = left.first;\n            this.second = left.second;\n            this.third = a;\n        } else {\n            this.arity = \"binary\";\n            this.first = left;\n            this.second = a;\n            if ((left.arity !== \"unary\" || left.id !== \"function\") && left.arity !== \"name\" && left.id !== \"(\" && left.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n                left.error(\"Expected a variable name.\");\n            }\n        }\n        if (token.id !== \")\") {\n            while (true) {\n                a.push(expression(0));\n                if (token.id !== \",\") {\n                    break;\n                }\n                advance(\",\");\n            }\n        }\n        advance(\")\");\n        return this;\n    });\n\n    prefix(\"!\");\n    prefix(\"-\");\n    prefix(\"typeof\");\n\n    prefix(\"(\", function () {\n        var e = expression(0);\n        advance(\")\");\n        return e;\n    });\n\n    prefix(\"function\", function () {\n        var a = [];\n        new_scope();\n        if (token.arity === \"name\") {\n            scope.define(token);\n            this.name = token.value;\n            advance();\n        }\n        advance(\"(\");\n        if (token.id !== \")\") {\n            while (true) {\n                if (token.arity !== \"name\") {\n                    token.error(\"Expected a parameter name.\");\n                }\n                scope.define(token);\n                a.push(token);\n                advance();\n                if (token.id !== \",\") {\n                    break;\n                }\n                advance(\",\");\n            }\n        }\n        this.first = a;\n        advance(\")\");\n        advance(\"{\");\n        this.second = statements();\n        advance(\"}\");\n        this.arity = \"function\";\n        scope.pop();\n        return this;\n    });\n\n    prefix(\"[\", function () {\n        var a = [];\n        if (token.id !== \"]\") {\n            while (true) {\n                a.push(expression(0));\n                if (token.id !== \",\") {\n                    break;\n                }\n                advance(\",\");\n            }\n        }\n        advance(\"]\");\n        this.first = a;\n        this.arity = \"unary\";\n        return this;\n    });\n\n    prefix(\"{\", function () {\n        var a = [],\n            n,\n            v;\n        if (token.id !== \"}\") {\n            while (true) {\n                n = token;\n                if (n.arity !== \"name\" && n.arity !== \"literal\") {\n                    token.error(\"Bad property name.\");\n                }\n                advance();\n                advance(\":\");\n                v = expression(0);\n                v.key = n.value;\n                a.push(v);\n                if (token.id !== \",\") {\n                    break;\n                }\n                advance(\",\");\n            }\n        }\n        advance(\"}\");\n        this.first = a;\n        this.arity = \"unary\";\n        return this;\n    });\n\n    stmt(\"{\", function () {\n        new_scope();\n        var a = statements();\n        advance(\"}\");\n        scope.pop();\n        return a;\n    });\n\n    stmt(\"var\", function () {\n        var a = [],\n            n,\n            t;\n        while (true) {\n            n = token;\n            if (n.arity !== \"name\") {\n                n.error(\"Expected a new variable name.\");\n            }\n            scope.define(n);\n            advance();\n            if (token.id === \"=\") {\n                t = token;\n                advance(\"=\");\n                t.first = n;\n                t.second = expression(0);\n                t.arity = \"binary\";\n                a.push(t);\n            }\n            if (token.id !== \",\") {\n                break;\n            }\n            advance(\",\");\n        }\n        advance(\";\");\n        return a.length === 0 ? null : a.length === 1 ? a[0] : a;\n    });\n\n    stmt(\"if\", function () {\n        advance(\"(\");\n        this.first = expression(0);\n        advance(\")\");\n        this.second = block();\n        if (token.id === \"else\") {\n            scope.reserve(token);\n            advance(\"else\");\n            this.third = token.id === \"if\" ? statement() : block();\n        } else {\n            this.third = null;\n        }\n        this.arity = \"statement\";\n        return this;\n    });\n\n    stmt(\"return\", function () {\n        if (token.id !== \";\") {\n            this.first = expression(0);\n        }\n        advance(\";\");\n        if (token.id !== \"}\") {\n            token.error(\"Unreachable statement.\");\n        }\n        this.arity = \"statement\";\n        return this;\n    });\n\n    stmt(\"break\", function () {\n        advance(\";\");\n        if (token.id !== \"}\") {\n            token.error(\"Unreachable statement.\");\n        }\n        this.arity = \"statement\";\n        return this;\n    });\n\n    stmt(\"while\", function () {\n        advance(\"(\");\n        this.first = expression(0);\n        advance(\")\");\n        this.second = block();\n        this.arity = \"statement\";\n        return this;\n    });\n\n    return function (source) {\n        tokens = source.tokens('=<>!+-*&|/%^', '=<>&|');\n        token_nr = 0;\n        new_scope();\n        advance();\n        var s = statements();\n        advance(\"(end)\");\n        scope.pop();\n        return s;\n    };\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./parts/crockford/parser.js\n ** module id = 365\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./parts/crockford/parser.js?");

/***/ },

/***/ 366:
/***/ function(module, exports) {

	eval("'use strict';\n\nString.prototype.tokens = function (prefix, suffix) {\n    var c; // The current character.\n    var from; // The index of the start of the token.\n    var i = 0; // The index of the current character.\n    var length = this.length;\n    var n; // The number value.\n    var q; // The quote character.\n    var str; // The string value.\n\n    var result = []; // An array to hold the results.\n\n    var make = function make(type, value) {\n\n        // Make a token object.\n\n        return {\n            type: type,\n            value: value,\n            from: from,\n            to: i\n        };\n    };\n\n    // Begin tokenization. If the source string is empty, return nothing.\n\n    if (!this) {\n        return;\n    }\n\n    // If prefix and suffix strings are not provided, supply defaults.\n\n    if (typeof prefix !== 'string') {\n        prefix = '<>+-&';\n    }\n    if (typeof suffix !== 'string') {\n        suffix = '=>&:';\n    }\n\n    // Loop through this text, one character at a time.\n\n    c = this.charAt(i);\n    while (c) {\n        from = i;\n\n        // Ignore whitespace.\n\n        if (c <= ' ') {\n            i += 1;\n            c = this.charAt(i);\n\n            // name.\n        } else if (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z') {\n                str = c;\n                i += 1;\n                for (;;) {\n                    c = this.charAt(i);\n                    if (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '_') {\n                        str += c;\n                        i += 1;\n                    } else {\n                        break;\n                    }\n                }\n                result.push(make('name', str));\n\n                // number.\n\n                // A number cannot start with a decimal point. It must start with a digit,\n                // possibly '0'.\n            } else if (c >= '0' && c <= '9') {\n                    str = c;\n                    i += 1;\n\n                    // Look for more digits.\n\n                    for (;;) {\n                        c = this.charAt(i);\n                        if (c < '0' || c > '9') {\n                            break;\n                        }\n                        i += 1;\n                        str += c;\n                    }\n\n                    // Look for a decimal fraction part.\n\n                    if (c === '.') {\n                        i += 1;\n                        str += c;\n                        for (;;) {\n                            c = this.charAt(i);\n                            if (c < '0' || c > '9') {\n                                break;\n                            }\n                            i += 1;\n                            str += c;\n                        }\n                    }\n\n                    // Look for an exponent part.\n\n                    if (c === 'e' || c === 'E') {\n                        i += 1;\n                        str += c;\n                        c = this.charAt(i);\n                        if (c === '-' || c === '+') {\n                            i += 1;\n                            str += c;\n                            c = this.charAt(i);\n                        }\n                        if (c < '0' || c > '9') {\n                            make('number', str).error(\"Bad exponent\");\n                        }\n                        do {\n                            i += 1;\n                            str += c;\n                            c = this.charAt(i);\n                        } while (c >= '0' && c <= '9');\n                    }\n\n                    // Make sure the next character is not a letter.\n\n                    if (c >= 'a' && c <= 'z') {\n                        str += c;\n                        i += 1;\n                        make('number', str).error(\"Bad number\");\n                    }\n\n                    // Convert the string value to a number. If it is finite, then it is a good\n                    // token.\n\n                    n = +str;\n                    if (isFinite(n)) {\n                        result.push(make('number', n));\n                    } else {\n                        make('number', str).error(\"Bad number\");\n                    }\n\n                    // string\n                } else if (c === '\\'' || c === '\"') {\n                        str = '';\n                        q = c;\n                        i += 1;\n                        for (;;) {\n                            c = this.charAt(i);\n                            if (c < ' ') {\n                                make('string', str).error(c === '\\n' || c === '\\r' || c === '' ? \"Unterminated string.\" : \"Control character in string.\", make('', str));\n                            }\n\n                            // Look for the closing quote.\n\n                            if (c === q) {\n                                break;\n                            }\n\n                            // Look for escapement.\n\n                            if (c === '\\\\') {\n                                i += 1;\n                                if (i >= length) {\n                                    make('string', str).error(\"Unterminated string\");\n                                }\n                                c = this.charAt(i);\n                                switch (c) {\n                                    case 'b':\n                                        c = '\\b';\n                                        break;\n                                    case 'f':\n                                        c = '\\f';\n                                        break;\n                                    case 'n':\n                                        c = '\\n';\n                                        break;\n                                    case 'r':\n                                        c = '\\r';\n                                        break;\n                                    case 't':\n                                        c = '\\t';\n                                        break;\n                                    case 'u':\n                                        if (i >= length) {\n                                            make('string', str).error(\"Unterminated string\");\n                                        }\n                                        c = parseInt(this.substr(i + 1, 4), 16);\n                                        if (!isFinite(c) || c < 0) {\n                                            make('string', str).error(\"Unterminated string\");\n                                        }\n                                        c = String.fromCharCode(c);\n                                        i += 4;\n                                        break;\n                                }\n                            }\n                            str += c;\n                            i += 1;\n                        }\n                        i += 1;\n                        result.push(make('string', str));\n                        c = this.charAt(i);\n\n                        // comment.\n                    } else if (c === '/' && this.charAt(i + 1) === '/') {\n                            i += 1;\n                            for (;;) {\n                                c = this.charAt(i);\n                                if (c === '\\n' || c === '\\r' || c === '') {\n                                    break;\n                                }\n                                i += 1;\n                            }\n\n                            // combining\n                        } else if (prefix.indexOf(c) >= 0) {\n                                str = c;\n                                i += 1;\n                                while (true) {\n                                    c = this.charAt(i);\n                                    if (i >= length || suffix.indexOf(c) < 0) {\n                                        break;\n                                    }\n                                    str += c;\n                                    i += 1;\n                                }\n                                result.push(make('operator', str));\n\n                                // single-character operator\n                            } else {\n                                    i += 1;\n                                    result.push(make('operator', c));\n                                    c = this.charAt(i);\n                                }\n    }\n    return result;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./parts/crockford/lexer.js\n ** module id = 366\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./parts/crockford/lexer.js?");

/***/ }

});